EffortPatch
Unity Editor Version: 6000.0.26f1

This is a Unity project developed for running human behavioural experiments online using webGL. It has been designed to include a general purpose codebase that can easily serve as the basis for other online behavioural experiments in Unity.

Overview
You will need to edit filepath.path in filepath.cs script for an appropriate location for the log file.

To run an experiment, you must start the game from the persistent scene, 'Persistent'

The gameplay is controlled almost entirely from the singleton GameController.cs. There is some gameplay that is local to short scripts attached to objects in different scenes, but where possible these scripts trigger functions within GameController.cs to keep gameplay centralised and readable. A finite-state-machine tracks within-trial changes to the game state.

The data management is operated through LogManager.cs. Any configuration file that needs to be read or loaded, any online changes to trial list sequencing, and any saving of the data (to either the MSN Lab on a local computer), is performed here. There is one instance of DataController that persists between scenes and is fetched/found by other smaller scripts when needed - so it is effectively a singleton but implemented slightly differently.

The experiment configuration is controlled mainly through the script ExperimentManager.cs, which specifies the trial sequencing, randomisation, and experiment-specific controlled variables e.g. the duration of SkipPenalty.

When playing the game, movements are controlled with the arrow keys. The left and right arrow keys are used to make decisions in the DecisionPhase scene to select Work or Skip. If Work option is selected, they are required to press the direction buttons to move to the fruit reward; if Skip option is selected, then they shall wait for 3 seconds until the next option shows up. No decision will cause a 5 seconds penalty. There may be small differences in the sensitivity of different computers to these key inputs. These keys should automatically adjust to the keypad/game control you are using, but if not then these can be adjusted using Edit > ProjectSettings > Input. Sensitivity can be edited within the FPSController in each scene. Make sure you edit ALL FPSController instances if you do this!

Notes:
At the start of each major script I have left some notes on things that remain to be tidied, but shouldn't massively change functionality. I will address these at some point...

